#The mouse in the labyrinth. 
#Suppose you have a “labyrinth” that is a perfect 5-by-5 grid. 
#There is a mouse at coordinates [1,1] at the beginning (upper left corner), and a piece of cheese at [5,5] (lower right corner). 
#Each turn, the mouse makes a random movement — it can go up, down, left or right, one step at a time. 
#However, the boundaries of the labyrinth are sealed, therefore it is impossible to move e.g. from [5,3] downwards or from [2,1] to the left, etc. 
#Write a program that simulates the random motion of the mouse, stopping when the mouse has finally reached the cheese (i.e. square [5,5]).
#All the while, keep track of the total number of steps the mouse has taken, and write in on screen at the very end. 
#Run the program a couple of times to see how much time it usually takes for the mouse to reach the cheese.

A<-matrix(numeric(25),nrow=5)
A[1,1]<-1
A[5,5]<-2
move<-runif(1)
while (move < 0.5) {
		A[2,1]<-1
		A[1,1]<-0
	}
while (move <0.5) {
	A[1,2]<-1
	A[1,1]<-0
}
A


 m <- 5
 n <-5
 A <- matrix(rep(0, 25), nrow=m)
 A[1,1]<-1
 A[5,5]<-2
x<-runif(1) 
if (x<0.5) {
	A[1,1]<-0
	A[2,1]<-1
} 
if (x>=0.5) {
	A[1,1]<-0
	A[1,2]<-1
}
Right<-1
Left<-2
Up<-3
Down<-4
for (i in 2:length(m-1)) {
	for (j in 2:length(n-1))
	while (A[i,j]==1) {
		x<-sample(1:4,1)
		while	 (x==1) {
			A[i,j]=
		}
	}
}

